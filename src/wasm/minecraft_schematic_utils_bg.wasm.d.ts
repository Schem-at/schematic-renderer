/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_schematicwrapper_free: (a: number, b: number) => void;
export const __wbg_mchprsworldwrapper_free: (a: number, b: number) => void;
export const __wbg_blockstatewrapper_free: (a: number, b: number) => void;
export const schematicwrapper_new: () => number;
export const schematicwrapper_create_simulation_world: (a: number) => number;
export const schematicwrapper_from_data: (a: number, b: number, c: number, d: number) => void;
export const schematicwrapper_from_litematic: (a: number, b: number, c: number, d: number) => void;
export const schematicwrapper_to_litematic: (a: number, b: number) => void;
export const schematicwrapper_from_schematic: (a: number, b: number, c: number, d: number) => void;
export const schematicwrapper_to_schematic: (a: number, b: number) => void;
export const schematicwrapper_set_block: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const schematicwrapper_set_block_with_properties: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => void;
export const schematicwrapper_get_block: (a: number, b: number, c: number, d: number, e: number) => void;
export const schematicwrapper_get_block_with_properties: (a: number, b: number, c: number, d: number) => number;
export const schematicwrapper_get_block_entity: (a: number, b: number, c: number, d: number) => number;
export const schematicwrapper_get_all_block_entities: (a: number) => number;
export const schematicwrapper_print_schematic: (a: number, b: number) => void;
export const schematicwrapper_debug_info: (a: number, b: number) => void;
export const schematicwrapper_get_dimensions: (a: number, b: number) => void;
export const schematicwrapper_get_block_count: (a: number) => number;
export const schematicwrapper_get_volume: (a: number) => number;
export const schematicwrapper_get_region_names: (a: number, b: number) => void;
export const schematicwrapper_blocks: (a: number) => number;
export const schematicwrapper_chunks: (a: number, b: number, c: number, d: number) => number;
export const schematicwrapper_get_chunk_blocks: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const mchprsworldwrapper_new: (a: number, b: number) => void;
export const mchprsworldwrapper_on_use_block: (a: number, b: number, c: number, d: number) => void;
export const mchprsworldwrapper_tick: (a: number, b: number) => void;
export const mchprsworldwrapper_flush: (a: number) => void;
export const mchprsworldwrapper_is_lit: (a: number, b: number, c: number, d: number) => number;
export const mchprsworldwrapper_get_lever_power: (a: number, b: number, c: number, d: number) => number;
export const mchprsworldwrapper_get_redstone_power: (a: number, b: number, c: number, d: number) => number;
export const mchprsworldwrapper_get_truth_table: (a: number) => number;
export const blockstatewrapper_new: (a: number, b: number) => number;
export const blockstatewrapper_with_property: (a: number, b: number, c: number, d: number, e: number) => void;
export const blockstatewrapper_name: (a: number, b: number) => void;
export const blockstatewrapper_properties: (a: number) => number;
export const debug_schematic: (a: number, b: number) => void;
export const debug_json_schematic: (a: number, b: number) => void;
export const start: () => void;
export const __wbg_blockposition_free: (a: number, b: number) => void;
export const __wbg_get_blockposition_x: (a: number) => number;
export const __wbg_set_blockposition_x: (a: number, b: number) => void;
export const __wbg_get_blockposition_y: (a: number) => number;
export const __wbg_set_blockposition_y: (a: number, b: number) => void;
export const __wbg_get_blockposition_z: (a: number) => number;
export const __wbg_set_blockposition_z: (a: number, b: number) => void;
export const blockposition_new: (a: number, b: number, c: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_add_to_stack_pointer: (a: number) => number;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_start: () => void;
